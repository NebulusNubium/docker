SELECT ville_nom, ville_surface FROM `villes_france_free` 
ORDER BY ville_surface ASC
LIMIT 5


__

SELECT ville_code_postal FROM `villes_france_free` 
ORDER BY ville_population_2010 DESC
LIMIT 15

_____

SELECT ville_departement, ville_nom FROM `villes_france_free` 
WHERE ville_nom LIKE 'P%'

___

SELECT ville_departement, SUM(ville_population_2010), SUM(ville_population_1999), SUM(ville_population_2012) FROM villes_france_free
GROUP BY ville_departement;

__

SELECT ville_nom, ville_population_1999 FROM `villes_france_free` WHERE ville_population_1999 > 20000;

__

UPDATE villes_france_free
SET ville_longitude_dms = REPLACE(ville_longitude_dms, '+', '*')

___

SELECT ville_nom,REVERSE(ville_nom) AS nom_inverse
FROM villes_france_free
WHERE ville_departement LIKE '97%';

____

SELECT * FROM `villes_france_free` AS v
INNER JOIN departement ON
v.ville_departement = departement.departement_id;

______
3.0

INSERT INTO `dart`(`Marque`, `Categorie`, `Prix`, `Modele`) VALUES ('bosch','lave-vaiselle','599','WIOWIOWIO')

3.1
SELECT dart.Marque, dart.Categorie, dart.Modele FROM `dart`
3.2
DELETE FROM `dart`
WHERE Marque = 'indesit';
3.3
UPDATE dart
SET Prix = Prix + 50
WHERE Prix < 600;
__________

4
CREATE TABLE pj (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(20),
    metierpj VARCHAR(100)
);
CREATE TABLE metier (
    id INT AUTO_INCREMENT PRIMARY KEY,
    metier VARCHAR(100)
);

________

5

CREATE DATABASE multimedia;

CREATE TABLE utilisateurs (
  id   INT AUTO_INCREMENT PRIMARY KEY,
  nom  VARCHAR(100) NOT NULL
);

CREATE TABLE produits (
  id   INT AUTO_INCREMENT PRIMARY KEY,
  nom  VARCHAR(100) NOT NULL
);

CREATE TABLE notes (
  utilisateur_id INT NOT NULL,
  produit_id     INT NOT NULL,
  note           INT NOT NULL,
  PRIMARY KEY (utilisateur_id, produit_id),
  FOREIGN KEY (utilisateur_id) REFERENCES utilisateurs(id),
  FOREIGN KEY (produit_id)     REFERENCES produits(id),
  CONSTRAINT chk_note CHECK (note BETWEEN 1 AND 5)
);

INSERT INTO utilisateurs (nom) VALUES
  ('Daddy'),
  ('Mommy'),
  ('Covide'),
  ('David'),
  ('Holly');

INSERT INTO produits (nom) VALUES
  ('Télévision 4K'),
  ('Casque Audio'),
  ('Enceinte Bluetooth');

INSERT INTO notes (utilisateur_id, produit_id, note) VALUES
  (1, 1, 5),  (1, 2, 4),  (1, 3, 3),
  (2, 1, 4),  (2, 2, 3),  (2, 3, 5),
  (3, 1, 3),  (3, 2, 5),  (3, 3, 4),
  (4, 1, 2),  (4, 2, 4),  (4, 3, 5),
  (5, 1, 5),  (5, 2, 5),  (5, 3, 4);


SELECT produits.nom, AVG(notes) AS note_moyenne
FROM produits
LEFT JOIN notes ON produits.id = notes.produit_id
GROUP BY produits.nom